{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n\n  // Check if email exists\n  try {\n    const emailResponse = await axios.get(`http://localhost:5000/check-email/${email}`);\n    const user = emailResponse.data;\n\n    // Display user details if email exists\n    if (user) {\n      setMessage(`Email already exists. User: ${user.username}, Phone: ${user.phone}`);\n      return;\n    }\n  } catch (error) {\n    // If email not found, proceed with form submission\n    if (error.response && error.response.status === 404) {\n      // Email not found, proceed with form submission\n      const formData = new FormData();\n      formData.append('service', service);\n      formData.append('experience', experience);\n      formData.append('address', address);\n      formData.append('email', email);\n      if (image) {\n        formData.append('image', image);\n      }\n      try {\n        const response = await axios.post('http://localhost:5000/become-service-provider', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setMessage(response.data.message);\n        if (response.status === 201) {\n          window.location.href = `/${service.toLowerCase()}`;\n        }\n      } catch (error) {\n        setMessage('Error submitting form');\n      }\n    } else {\n      setMessage('Error checking email');\n    }\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","emailResponse","axios","get","email","user","data","setMessage","username","phone","error","response","status","formData","FormData","append","service","experience","address","image","post","headers","message","window","location","href","toLowerCase"],"sources":["C:/React Projects/service-provider/frontend/src/components/Become.js"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  // Check if email exists\r\n  try {\r\n    const emailResponse = await axios.get(`http://localhost:5000/check-email/${email}`);\r\n    const user = emailResponse.data;\r\n\r\n    // Display user details if email exists\r\n    if (user) {\r\n      setMessage(`Email already exists. User: ${user.username}, Phone: ${user.phone}`);\r\n      return;\r\n    }\r\n  } catch (error) {\r\n    // If email not found, proceed with form submission\r\n    if (error.response && error.response.status === 404) {\r\n      // Email not found, proceed with form submission\r\n      const formData = new FormData();\r\n      formData.append('service', service);\r\n      formData.append('experience', experience);\r\n      formData.append('address', address);\r\n      formData.append('email', email);\r\n      if (image) {\r\n        formData.append('image', image);\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/become-service-provider', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        });\r\n        setMessage(response.data.message);\r\n        if (response.status === 201) {\r\n          window.location.href = `/${service.toLowerCase()}`;\r\n        }\r\n      } catch (error) {\r\n        setMessage('Error submitting form');\r\n      }\r\n    } else {\r\n      setMessage('Error checking email');\r\n    }\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;EAElB;EACA,IAAI;IACF,MAAMC,aAAa,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,qCAAqCC,KAAK,EAAE,CAAC;IACnF,MAAMC,IAAI,GAAGJ,aAAa,CAACK,IAAI;;IAE/B;IACA,IAAID,IAAI,EAAE;MACRE,UAAU,CAAC,+BAA+BF,IAAI,CAACG,QAAQ,YAAYH,IAAI,CAACI,KAAK,EAAE,CAAC;MAChF;IACF;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACA,IAAIA,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACnD;MACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEC,OAAO,CAAC;MACnCH,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEE,UAAU,CAAC;MACzCJ,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEG,OAAO,CAAC;MACnCL,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEX,KAAK,CAAC;MAC/B,IAAIe,KAAK,EAAE;QACTN,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEI,KAAK,CAAC;MACjC;MAEA,IAAI;QACF,MAAMR,QAAQ,GAAG,MAAMT,KAAK,CAACkB,IAAI,CAAC,+CAA+C,EAAEP,QAAQ,EAAE;UAC3FQ,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACFd,UAAU,CAACI,QAAQ,CAACL,IAAI,CAACgB,OAAO,CAAC;QACjC,IAAIX,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;UAC3BW,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,IAAIT,OAAO,CAACU,WAAW,CAAC,CAAC,EAAE;QACpD;MACF,CAAC,CAAC,OAAOhB,KAAK,EAAE;QACdH,UAAU,CAAC,uBAAuB,CAAC;MACrC;IACF,CAAC,MAAM;MACLA,UAAU,CAAC,sBAAsB,CAAC;IACpC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}