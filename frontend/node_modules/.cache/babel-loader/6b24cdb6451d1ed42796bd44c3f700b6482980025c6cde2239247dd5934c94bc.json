{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Projects\\\\service-provider\\\\frontend\\\\src\\\\components\\\\services\\\\Carpenter.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Carpenter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Carpenter = () => {\n  _s();\n  const [providers, setProviders] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProviders = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/service-providers/carpenter');\n        const providersWithUserDetails = await Promise.all(response.data.map(async provider => {\n          try {\n            const userResponse = await axios.get(`http://localhost:5000/check-email/${provider.email}`);\n            return {\n              ...provider,\n              ...userResponse.data\n            };\n          } catch (error) {\n            return provider; // If user details are not found, return provider without user details\n          }\n        }));\n        setProviders(providersWithUserDetails);\n      } catch (error) {\n        setError('Error fetching service providers');\n      }\n    };\n    fetchProviders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carpenter-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), providers.map(provider => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"provider-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: provider.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), provider.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/png;charset=utf8;base64,${provider.image}`,\n        alt: \"Service Provider\",\n        className: \"provider-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Experience: \", provider.experience, \" years\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address: \", provider.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", provider.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), provider.username && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone: \", provider.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, provider.email, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Carpenter, \"chmAmsFBZbqsEq5FajYLmrc85EI=\");\n_c = Carpenter;\nexport default Carpenter;\nvar _c;\n$RefreshReg$(_c, \"Carpenter\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Carpenter","_s","providers","setProviders","error","setError","fetchProviders","response","get","providersWithUserDetails","Promise","all","data","map","provider","userResponse","email","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","image","src","alt","experience","address","phone","_c","$RefreshReg$"],"sources":["C:/React Projects/service-provider/frontend/src/components/services/Carpenter.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Carpenter.css';\r\n\r\nconst Carpenter = () => {\r\n  const [providers, setProviders] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProviders = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/service-providers/carpenter');\r\n        const providersWithUserDetails = await Promise.all(\r\n          response.data.map(async provider => {\r\n            try {\r\n              const userResponse = await axios.get(`http://localhost:5000/check-email/${provider.email}`);\r\n              return { ...provider, ...userResponse.data };\r\n            } catch (error) {\r\n              return provider; // If user details are not found, return provider without user details\r\n            }\r\n          })\r\n        );\r\n        setProviders(providersWithUserDetails);\r\n      } catch (error) {\r\n        setError('Error fetching service providers');\r\n      }\r\n    };\r\n\r\n    fetchProviders();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"carpenter-container\">\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {providers.map(provider => (\r\n        <div className=\"provider-card\" key={provider.email}>\r\n          <h3>{provider.username}</h3>\r\n          {provider.image && (\r\n            <img\r\n              src={`data:image/png;charset=utf8;base64,${provider.image}`}\r\n              alt=\"Service Provider\"\r\n              className=\"provider-image\"\r\n            />\r\n          )}\r\n          <p>Experience: {provider.experience} years</p>\r\n          <p>Address: {provider.address}</p>\r\n          <p>Email: {provider.email}</p>\r\n          {provider.username && (\r\n            <div>\r\n              <p>Phone: {provider.phone}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carpenter;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}